@page "/account"
@inject NavigationManager _navigation
@inject IAccountService _service
@inject AlertService _alertService
@inject IDialogService dialog
@inject IDialogService DialogService

<PageTitle>Conta</PageTitle>

<MudContainer MaxWidth="MaxWidth.ExtraLarge" Class="pa-1">
    <MudPaper Elevation="1" Class="pa-3" Style="width: 100%;">
        <MudGrid>
            <MudItem xs="12" class="d-flex justify-start mb-3">
                <MudText Typo="Typo.h6">Contas</MudText>
            </MudItem>
        </MudGrid>

        <MudTable Hover="true"
                  Elevation="1"
                  Dense="false"
                  Style="background-color: #fefefe;"
                  Bordered="true"
                  Items="@accounts"
                  Loading="@loading"
                  LoadingProgressColor="Color.Primary">
            <HeaderContent>
                <MudTh>Razão Social</MudTh>
                <MudTh>CNPJ</MudTh>
                <MudTh>Inscrição Estadual</MudTh>
                <MudTh>Telefone</MudTh>
                <MudTh>Email</MudTh>
                <MudTh>Ações</MudTh>
            </HeaderContent>
            <RowTemplate>
                <MudTd>@context.CorporateName</MudTd>
                <MudTd>@context.Cnpj</MudTd>
                <MudTd>@context.IE</MudTd>
                <MudTd>@context.Phone</MudTd>
                <MudTd>@context.Email</MudTd>
                <MudTd>
                    <MudMenu Icon="@Icons.Material.Filled.MoreVert" AnchorOrigin="Origin.TopRight">
                        <MudMenuItem Href="@($"{_navigation.BaseUri}account/form/{context.Id}")">
                            <MudText StartIcon="@Icons.Material.Filled.Edit">Editar</MudText>
                        </MudMenuItem>                       
                        <MudMenuItem OnClick="() => Delete(context)">
                            <MudText StartIcon="@Icons.Material.Filled.Delete" Color="Color.Error">Excluir</MudText>
                        </MudMenuItem>
                    </MudMenu>
                </MudTd>
            </RowTemplate>
        </MudTable>
    </MudPaper>
    <MudTooltip Text="Criar Nova Conta">
        <MudFab StartIcon="@Icons.Material.Filled.Add"
                Color="Color.Primary"
                IconColor="Color.Secondary"
                Size="Size.Medium"
                Style="position: fixed; right: 30px; bottom: 30px;"
                Href="account/form" />
    </MudTooltip>
</MudContainer>

@code {
    private List<Account> accounts = new List<Account>();
    private bool loading;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            loading = true;
            accounts = await _service.Get();
            loading = false;
        }
        catch (Exception ex)
        {
            await InvokeAsync(() => { _alertService.ShowAlert(ex.Message, Severity.Error); });
        }
    }
    private Task OpenDialogAsync()
    {
        var options = new DialogOptions { CloseOnEscapeKey = true };

        return DialogService.ShowAsync<AccountDialog>("", options);
    }

    private async Task Delete(Account obj)
    {
        try
        {
            bool? result = await dialog.ShowMessageBox(
                "Excluir",
                $"Confirma a exclusão da conta: {obj.CorporateName}?",
                yesText: "Sim", cancelText: "Não");
            if (result == true)
            {
                await _service.Delete(obj.Id);
                await InvokeAsync(() => { _alertService.ShowAlert("Conta deletada com sucesso!", Severity.Success); });
                accounts.Remove(obj);
            }
        }
        catch (Exception ex)
        {
            await InvokeAsync(() => { _alertService.ShowAlert(ex.Message, Severity.Error); });
        }
    }
}
